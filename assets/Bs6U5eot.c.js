import{_ as p}from"./DlAUqK2U.c.js";import{c as a,a as n,b as u,w as f,F as m,r as g,d as h,n as w,e as x,o as c,f as v,t as y}from"./DJLkntMg.p.js";const b={data(){return{branch:window.localStorage.getItem("Branch")||!1,username:window.localStorage.getItem("Github username")||!1,path:window.localStorage.getItem("Path")||!1,repo:window.localStorage.getItem("Repo name")||!1,token:window.localStorage.getItem("Token")||!1,regImg:/!\[.*\]\((\..*)\)/gm,posts:[],filtered:[],url:"",selected:"",preview:!1}},mounted:async function(){this.loadList();const t=document.createElement("script");t.setAttribute("src","https://cdn.jsdelivr.net/npm/marked/marked.min.js"),document.head.appendChild(t),this.titleSize()},methods:{generateUrl(){return!this.branch||!this.username||!this.path||!this.repo||!this.token?!1:`https://api.github.com/repos/${this.username}/${this.repo}/contents/${this.path}?ref=${this.branch}`},filter({target:t}){this.filtered=this.posts.filter(e=>e.name.startsWith(t.value))},previewSwich(){this.preview=!this.preview},async edit(t){const e=this.posts.find(i=>i.name==t),l=e.type=="file"?e.download_url:`https://raw.githubusercontent.com/${this.username}/${this.repo}/main/${this.path}/${t}/index.md`;try{const i=await fetch(l);i.ok&&(this.$refs.editor.value=await i.text(),this.selected=e,this.renderFile(),this.titleSize())}catch(i){console.log("File does not exist, creating new one",i)}},async loadList(){if(this.url=this.generateUrl())try{const t=await fetch(this.url,{headers:{Authorization:`token ${this.token}`}});t.ok&&(this.posts=await t.json(),this.filtered=this.posts)}catch(t){console.log("File does not exist, creating new one",t)}},titleSize(){this.$refs["file-title"].size=this.$refs["file-title"].value.length},getTextWidth(t,e){const i=document.createElement("canvas").getContext("2d");return i.font=e,i.measureText(t).width},renderFile(){var t;this.$refs.preview.innerHTML=window.marked.parse(this.imagePathModify(this.regImg,this.$refs.editor.value,`https://raw.githubusercontent.com/${this.username}/${this.repo}/${this.branch}/${(t=this==null?void 0:this.selected)==null?void 0:t.path}`))},clearSelected(){this.$refs.editor.value="",this.selected="",this.$refs.preview.innerHTML="",this.titleSize()},async putFile(){try{const t=await fetch(`https://api.github.com/repos/${this.username}/${this.repo}/contents/${this.$refs["file-title"].value}`,{headers:{Authorization:`token ${this.token}`,"Content-Type":"application/json","X-GitHub-Api-Version":"2022-11-28"}});let e=null;if(t.ok){const i=await t.json();this.selected.sha=i.sha}(await fetch(`https://api.github.com/repos/${this.username}/${this.repo}/contents/${this.$refs["file-title"].value}`,{method:"PUT",headers:{Authorization:`token ${this.token}`,"Content-Type":"application/json","X-GitHub-Api-Version":"2022-11-28"},body:JSON.stringify({message:`Adding/Updating file ${this.$refs["file-title"].value}`,content:btoa(this.$refs.editor.value),sha:this.selected.sha||null,branch:this.branch,owner:this.username,repo:this.repo,path:this.$refs["file-title"].value,committer:{name:this.username,email:this.username+"@github.com"}})})).ok&&console.log("saved successfully")}catch(t){console.log("File does not exist, creating new one",t)}},async delFile(){try{(await fetch(`https://api.github.com/repos/${this.username}/${this.repo}/contents/${this.$refs["file-title"].value}`,{method:"DELETE",headers:{Authorization:`token ${this.token}`,"Content-Type":"application/json","X-GitHub-Api-Version":"2022-11-28"},body:JSON.stringify({message:`Deleting file ${this.$refs["file-title"].value}`,content:btoa(this.$refs.editor.value),sha:this.selected.sha||null,branch:this.branch,owner:this.username,repo:this.repo,path:this.$refs["file-title"].value,committer:{name:this.username,email:this.username+"@github.com"}})})).ok&&console.log("delete successfully")}catch(t){console.log("File does not exist, creating new one",t)}},addImage(){this.$refs.imageUpload.click()},toBase64(t){return new Promise((e,l)=>{const i=new FileReader;i.readAsDataURL(t),i.onload=()=>e(i.result),i.onerror=l})},async fileUpload({target:t}){for(const e of t.files)try{const l=this.$refs["file-title"].value.split("/").slice(0,-1).join("/")+"/"+e.name,i=await this.toBase64(e);(await fetch(`https://api.github.com/repos/${this.username}/${this.repo}/contents/${l}`,{method:"PUT",headers:{Authorization:`token ${this.token}`,"Content-Type":"application/json","X-GitHub-Api-Version":"2022-11-28"},body:JSON.stringify({message:`Adding/Updating file ${l}`,content:i.split(",")[1],sha:this.selected.sha||null,branch:this.branch,owner:this.username,repo:this.repo,path:l,committer:{name:this.username,email:this.username+"@github.com"}})})).ok&&console.log("saved successfully")}catch(l){console.log("File does not exist, creating new one",l)}},imagePathModify(t,e,l){let i=e;return[...e.matchAll(t)].forEach(s=>{i=i.replace(s[0],s[0].replace(s[1],l+s[1].slice(1)))}),i}}},k={class:"flex flex-row w-screen h-screen"},$={class:"flex flex-col py-2 bg-zinc-900 w-52"},z={class:"flex flex-col justify-center w-full p-2"},S=["onClick"],C={key:1},F={class:"w-full h-full bg-zinc-700 flex flex-col"},_={class:"text-zinc-200 flex flex-row justify-between w-full"},A={class:"w-max px-4 py-1 flex flex-row"},I=["value"],T={class:"w-max px-4 py-1 flex flex-row"},U={class:"flex flex-row w-full h-full"};function j(t,e,l,i,o,s){const d=x("RouterLink");return c(),a("main",k,[n("div",$,[n("div",z,[u(d,{to:"/settings",class:"cursor-pointer text-center text-base bg-zinc-600 hover:bg-zinc-500 text-white rounded p-2 block w-full"},{default:f(()=>[v("Settings")]),_:1}),n("input",{onInput:e[0]||(e[0]=(...r)=>s.filter&&s.filter(...r)),class:"mt-2 bg-zinc-600 text-white rounded px-2 py-1 text-md",placeholder:"Filter",type:"text"},null,32)]),this.url?(c(!0),a(m,{key:0},g(o.filtered,r=>(c(),a("div",{onClick:L=>s.edit(r.name),class:"text-blue-100 px-3 cursor-pointer text-sm hover:bg-red-400"},y(r.name.replace(".md","")),9,S))),256)):(c(),a("div",C,"Please setup env in settings"))]),n("div",F,[n("div",_,[n("div",A,[n("div",{onClick:e[1]||(e[1]=(...r)=>s.putFile&&s.putFile(...r)),class:"cursor-pointer w-max py-1 px-4 hover:text-zinc-400"},"Save"),n("div",{onClick:e[2]||(e[2]=(...r)=>s.addImage&&s.addImage(...r)),class:"cursor-pointer w-max py-1 px-4 hover:text-zinc-400"},"Add Image"),n("input",{ref:"imageUpload",type:"file",onChange:e[3]||(e[3]=(...r)=>s.fileUpload&&s.fileUpload(...r)),accept:"image/*",multiple:"true",capture:"",class:"hidden"},null,544),n("div",{class:"cursor-pointer w-max py-1 px-4 hover:text-zinc-400",onClick:e[4]||(e[4]=(...r)=>s.previewSwich&&s.previewSwich(...r))},"Preview")]),n("input",{ref:"file-title",onInput:e[5]||(e[5]=(...r)=>s.titleSize&&s.titleSize(...r)),class:"bg-transparent w-full text-center",value:o.selected?o.selected.type=="file"?o.selected.path:o.selected.path+"/index.md":this.path+"/new_file.md"},null,40,I),n("div",T,[o.selected.path?(c(),a("div",{key:0,class:"cursor-pointer w-max py-1 px-4 hover:text-zinc-400",onClick:e[6]||(e[6]=(...r)=>s.delFile&&s.delFile(...r))},"Delete")):h("",!0),o.selected.path?(c(),a("div",{key:1,class:"cursor-pointer w-max py-1 px-4 hover:text-zinc-400",onClick:e[7]||(e[7]=(...r)=>s.clearSelected&&s.clearSelected(...r))},"Close")):h("",!0)])]),n("div",U,[n("textarea",{onInput:e[8]||(e[8]=(...r)=>s.renderFile&&s.renderFile(...r)),ref:"editor",style:{resize:"none","max-height":"calc(100% - 40px)"},class:"bg-zinc-800 w-full h-full p-2 text-blue-100"},null,544),n("div",{style:{"max-height":"calc(100% - 40px)"},class:w(`w-full h-full bg-zinc-800 text-zinc-200 overflow-y-auto p-2 overflow-x-hidden border-l border-zinc-600 ${this.preview?"":"hidden"}`),ref:"preview"},null,2)])])])}const E=p(b,[["render",j]]);export{E as default};
